version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-analysis-backend
    environment:
      - AZURE_SQL_SERVER=${AZURE_SQL_SERVER}
      - AZURE_SQL_DATABASE=${AZURE_SQL_DATABASE}
      - AZURE_SQL_USERNAME=${AZURE_SQL_USERNAME}
      - AZURE_SQL_PASSWORD=${AZURE_SQL_PASSWORD}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - REDIS_URL=redis://redis:6379
      - ODBC_DRIVER=FreeTDS  # Explicitly set the driver
    depends_on:
      - redis
    volumes:
      - ./backend:/app
    networks:
      - ai-analysis-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-analysis-frontend
    environment:
      - REACT_APP_API_URL=http://backend:8000/api/v1
      - REACT_APP_WS_URL=ws://backend:8000/ws
    depends_on:
      - backend
    networks:
      - ai-analysis-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ai-analysis-redis
    volumes:
      - redis_data:/data
    networks:
      - ai-analysis-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: ai-analysis-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - ai-analysis-network
    restart: unless-stopped

networks:
  ai-analysis-network:
    driver: bridge

volumes:
  redis_data: